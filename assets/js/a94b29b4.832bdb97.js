"use strict";(self.webpackChunkgh_pages_test_docu=self.webpackChunkgh_pages_test_docu||[]).push([[842],{8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}},8841:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"purl-standard","title":"purl-standard","description":"\x3c!--","source":"@site/docs/purl-standard.md","sourceDirName":".","slug":"/purl-standard","permalink":"/gh-pages-test-docu/docs/purl-standard","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/purl-standard.md","tags":[],"version":"current","frontMatter":{}}');var s=i(4848),r=i(8453);const a={},o="About this Specification",c={},d=[{value:"2.1 Requirements Terminology",id:"21-requirements-terminology",level:2},{value:"2.2 Implementation Conformance",id:"22-implementation-conformance",level:2},{value:"2.3 Example Normative Optional Clause Heading",id:"23-example-normative-optional-clause-heading",level:2},{value:"Some <code>purl</code> examples",id:"some-purl-examples",level:2},{value:"A <code>purl</code> is a URL",id:"a-purl-is-a-url",level:2},{value:"5.1 Permitted Characters",id:"51-permitted-characters",level:2},{value:"5.2 Separator Characters",id:"52-separator-characters",level:2},{value:"5.3 Character Encoding",id:"53-character-encoding",level:2},{value:"5.4 Case Folding",id:"54-case-folding",level:2},{value:"5.5 Component-level Rules",id:"55-component-level-rules",level:2},{value:"5.6 PURL Types",id:"56-purl-types",level:2},{value:"Where to find PURL Type information",id:"where-to-find-purl-type-information",level:2},{value:"A.1 PURL Type Definition",id:"a1-purl-type-definition",level:2},{value:"A.2 PURL Types Index",id:"a2-purl-types-index",level:2},{value:"A.3 PURL Tests",id:"a3-purl-tests",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"about-this-specification",children:"About this Specification"})}),"\n",(0,s.jsxs)(n.p,{children:["The document at ",(0,s.jsx)(n.a,{href:"https://tc54.org/ecmaXXX/",children:"https://tc54.org/ecmaXXX/"})," is the most accurate and\nup-to-date Package-URL specification."]}),"\n",(0,s.jsxs)(n.p,{children:["This document is available as ",(0,s.jsx)(n.a,{href:"https://ecma-tc54.github.io/ECMA-xxx-PURL/",children:"a single\npage"})," and as ",(0,s.jsx)(n.a,{href:"https://ecma-tc54.github.io/ECMA-xxx-PURL/multipage/",children:"multiple\npages"}),"."]}),"\n",(0,s.jsx)(n.h1,{id:"contributing-to-this-specification",children:"Contributing to this Specification"}),"\n",(0,s.jsx)(n.p,{children:"This specification is developed on GitHub with the help of the\nPackage-URL community. There are a number of ways to contribute to the\ndevelopment of this specification:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["GitHub Repository: ",(0,s.jsx)(n.a,{href:"https://github.com/Ecma-TC54/ECMA-xxx-PURL",children:"https://github.com/Ecma-TC54/ECMA-xxx-PURL"})]}),"\n",(0,s.jsxs)(n.li,{children:["Issues: ",(0,s.jsx)(n.a,{href:"https://github.com/Ecma-TC54/ECMA-xxx-PURL/issues",children:"All\nIssues"}),", ",(0,s.jsx)(n.a,{href:"https://github.com/Ecma-TC54/ECMA-xxx-PURL/issues/new",children:"File a\nNew Issue"})]}),"\n",(0,s.jsxs)(n.li,{children:["Pull Requests: ",(0,s.jsx)(n.a,{href:"https://github.com/Ecma-TC54/ECMA-xxx-PURL/pulls",children:"All Pull\nRequests"}),", ",(0,s.jsx)(n.a,{href:"https://github.com/Ecma-TC54/ECMA-xxx-PURL/pulls/new",children:"Create a\nNew Pull\nRequest"})]}),"\n",(0,s.jsxs)(n.li,{children:["Editors:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"mailto:jmhoran@aboutcode.org",children:"John Horan"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"mailto:mjherzog@aboutcode.org",children:"Michael Herzog"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"mailto:pombredanne@aboutcode.org",children:"Philippe Ombredanne"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"mailto:steve.springett@owasp.org",children:"Steve Springett"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Community:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Chat: ",(0,s.jsx)(n.a,{href:"https://cyclonedx.slack.com/archives/C06KTE3BWEB",children:"Slack\nChannel"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Refer to the\n",(0,s.jsx)(n.a,{href:"https://ecma-tc54.github.io/ECMA-xxx-PURL/#sec-colophon",children:"colophon"})," for\nmore information on how this document was created."]}),"\n",(0,s.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(n.p,{children:"Software ecosystems have evolved into highly interconnected networks of\ncomponents, packages, and dependencies. Managing this complexity demands\na robust, uniform mechanism to identify and track software packages\nacross diverse ecosystems and tools. Package-URL (PURL) was developed to\naddress this challenge by providing a simple, consistent, and flexible\napproach to identifying software packages with precision and clarity."}),"\n",(0,s.jsx)(n.p,{children:"PURL introduces a standardized URL-based syntax that uniquely identifies\nsoftware packages, independent of their ecosystem or distribution\nchannel. Unlike traditional identification methods, PURL embeds critical\nmetadata directly into its structure, enabling efficient, accurate\npackage identification at scale. This standardization ensures\ninteroperability between tools and ecosystems, fostering greater\ncollaboration and reducing ambiguity in software supply chain\nmanagement."}),"\n",(0,s.jsx)(n.p,{children:"Challenges addressed by PURL:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ambiguity in Package Identification:"})," With diverse naming\nconventions across ecosystems, identifying software packages reliably\nhas historically been a challenge. PURL eliminates this ambiguity by\ncreating a universal identifier with a predictable structure."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cross-Ecosystem Interoperability:"})," Developers, organizations, and\ntools often work across multiple ecosystems, each with its own package\nmanagement systems. PURL harmonizes these differences, enabling\nseamless interoperability."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Enhanced Traceability and Risk Management:"})," In an era where supply\nchain security is critical, PURL provides the foundation for\nidentifying and tracing packages to their origins, dependencies, and\npotential vulnerabilities."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tooling and Automation:"})," By standardizing package identification,\nPURL simplifies tooling development, automation, and integration for\ntasks such as software composition analysis, vulnerability management,\nand license compliance."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"As software supply chain security becomes a global priority, formalizing\nPURL as an international standard ensures its adoption and consistent\nimplementation. Standardization under Ecma International Technical\nCommittee 54 (TC54) positions PURL as a foundational building block for\nsecure, transparent, and efficient software ecosystems worldwide."}),"\n",(0,s.jsx)(n.p,{children:"By enabling a universally recognized and implementable specification,\nPURL aligns with global efforts to improve the security, reliability,\nand accountability of software supply chains. Its adoption ensures that\norganizations and developers can rely on a common language to manage\nsoftware packages across the diverse and rapidly evolving software\nlandscape."}),"\n",(0,s.jsx)(n.h1,{id:"2-conformance",children:"2 Conformance"}),"\n",(0,s.jsx)(n.h2,{id:"21-requirements-terminology",children:"2.1 Requirements Terminology"}),"\n",(0,s.jsxs)(n.p,{children:["In this standard, the words that are used to define the significance of\neach requirement are detailed below. These words are used in accordance\nwith their definitions in ",(0,s.jsx)(n.a,{href:"https://www.ietf.org/rfc/rfc2119.txt",children:"RFC\n2119"}),", and their respective\nmeanings are reproduced below:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Must: This word, or the adjective \u201crequired\u201d and the auxiliary verb\n\u201cshall\u201d, means that the item is an absolute requirement of the\nstandard."}),"\n",(0,s.jsx)(n.li,{children:"Should: This word, or the adjective \u201crecommended\u201d, means that there\nmight exist valid reasons in particular circumstances to ignore this\nitem, but the full implications should be understood and the case\ncarefully weighed before making an implementation decision."}),"\n",(0,s.jsx)(n.li,{children:"May: This word, or the adjective \u201coptional\u201d, means that this item is\ntruly optional."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The words \u201cmust not\u201d, \u201cshall not\u201d, \u201cshould not\u201d, and \u201cnot recommended\u201d,\nare the negative forms of \u201cmust\u201d, \u201cshall\u201d, \u201cshould\u201d, and \u201crecommended\u201d,\nrespectively. There is no negative form of \u201cmay\u201d."}),"\n",(0,s.jsx)(n.h2,{id:"22-implementation-conformance",children:"2.2 Implementation Conformance"}),"\n",(0,s.jsx)(n.p,{children:"A conforming implementation of Package-URL (PURL) must fully implement\nand support all elements defined within this specification, including\nthe syntax, components, and semantic requirements for constructing and\ninterpreting valid PURLs."}),"\n",(0,s.jsx)(n.p,{children:"A conforming implementation of PURL must adhere to the syntax defined in\nthis specification, ensuring that all PURLs are parsed, constructed, and\nvalidated according to the prescribed rules. The implementation must\nprovide full support for ecosystem-agnostic behaviour, enabling PURLs to\nfunction consistently and reliably across diverse environments."}),"\n",(0,s.jsx)(n.p,{children:"All required components of a PURL, such as the scheme, type, and name,\nmust be present and validated according to the rules defined in this\nspecification. Additionally, optional components, including qualifiers\nand subpaths, must be handled appropriately if provided, in full\ncompliance with their specified behaviours."}),"\n",(0,s.jsx)(n.p,{children:"Implementations must ensure that equivalent PURLs are consistently\nresolved to the same canonical representation. This includes strict\nadherence to normalisation and equivalence rules. Furthermore,\nimplementations must process URI encoding and decoding for PURL\ncomponents according to the standards outlined in RFC 3986."}),"\n",(0,s.jsx)(n.p,{children:"Invalid PURLs that fail to conform to the specification must be\nidentified and rejected by any conforming implementation. This\nguarantees the integrity and reliability of PURLs in all supported\ncontexts."}),"\n",(0,s.jsx)(n.p,{children:"A conforming implementation of PURL may extend its functionality by\nproviding ecosystem-specific validation, processing, or metadata\nhandling, as long as these extensions do not violate the core\nspecification. Additionally, implementations may offer auxiliary tools\nor features, such as utilities for constructing or validating PURLs,\nprovided they align with the standard\u2019s requirements."}),"\n",(0,s.jsx)(n.p,{children:"A conforming implementation must not redefine or alter the core syntax,\ncomponents, or semantics defined by this specification. Any prohibited\nextensions explicitly identified in the specification must not be\nimplemented. Furthermore, behaviours that compromise the\ninteroperability of PURLs across tools, platforms, or ecosystems are\nstrictly disallowed."}),"\n",(0,s.jsx)(n.p,{children:"A conforming implementation of Package-URL may choose to implement or\nnot implement Normative Optional subclauses. If any Normative Optional\nbehaviour is implemented, all of the behaviour in the containing\nNormative Optional clause must be implemented. A Normative Optional\nclause is denoted in this specification with the words \u201cNormative\nOptional\u201d in a coloured box, as shown below."}),"\n",(0,s.jsx)(n.h2,{id:"23-example-normative-optional-clause-heading",children:"2.3 Example Normative Optional Clause Heading"}),"\n",(0,s.jsx)(n.p,{children:"Example clause contents."}),"\n",(0,s.jsx)(n.h1,{id:"3-normative-references",children:"3 Normative References"}),"\n",(0,s.jsx)(n.p,{children:"The following referenced documents are indispensable for the application\nof this document. For dated references, only the edition cited applies.\nFor undated references, the latest edition of the referenced document\n(including any amendments) applies."}),"\n",(0,s.jsxs)(n.p,{children:["ASCII, ",(0,s.jsx)(n.em,{children:"American National Standards Institute, \u201cCoded Character Set \u2013\n7-bit American Standard Code for Information Interchange\u201d, ANSI X3.4,\n1986"})," ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/ASCII",children:"https://en.wikipedia.org/wiki/ASCII"})]}),"\n",(0,s.jsxs)(n.p,{children:["RFC 3986, \u200b",(0,s.jsx)(n.em,{children:"Uniform Resource Identifier (URI): Generic Syntax"}),"\u200b.\n",(0,s.jsx)(n.a,{href:"https://datatracker.ietf.org/doc/html/rfc3986",children:"https://datatracker.ietf.org/doc/html/rfc3986"})]}),"\n",(0,s.jsx)(n.h1,{id:"4-overview",children:"4 Overview"}),"\n",(0,s.jsx)(n.p,{children:"This section contains a non-normative overview of the Package-URL\nspecification."}),"\n",(0,s.jsx)(n.p,{children:"The Package-URL (PURL) specification defines a lightweight, universal\nsyntax for identifying software packages. By leveraging a URL-based\nformat, PURL provides a consistent and interoperable mechanism for\nreferencing software packages across a wide range of ecosystems and\ntools. Its design addresses the challenges of ambiguity, inconsistency,\nand fragmentation in software package identification, enabling better\ninteroperability and traceability in modern software supply chains."}),"\n",(0,s.jsx)(n.p,{children:"This specification focuses on the core aspects of PURL, including its\nsyntax, required components, optional attributes, and conformance\nrequirements. It does not cover ecosystem-specific types or extensions\nsuch as PURL Version Ranges (VERS). However, the flexibility of PURL\nallows it to be extended to meet the needs of diverse package ecosystems\nwithout compromising its universal applicability."}),"\n",(0,s.jsx)(n.p,{children:"The primary audience for this specification includes developers, tool\nimplementers, and organisations involved in software composition\nanalysis, dependency management, and supply chain security. PURL is\nfoundational to a variety of use cases, from software bill of materials\n(SBOM) generation and license compliance to vulnerability tracking and\nsoftware artefact exchange."}),"\n",(0,s.jsx)(n.p,{children:"While this document serves as the authoritative reference for\nimplementing PURL, it is complemented by various ecosystem-specific\nguidance documents, examples, and related standards. These resources\nprovide additional context and practical insights for leveraging PURL\neffectively."}),"\n",(0,s.jsx)(n.p,{children:"This overview is non-normative and serves to provide context for the\nspecification\u2019s intent, purpose, and audience. For detailed requirements\nand conformance criteria, refer to the normative sections of this\nspecification."}),"\n",(0,s.jsx)(n.h1,{id:"5-package-url-specification",children:"5 Package-URL Specification"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"purl"})," stands for ",(0,s.jsx)(n.strong,{children:"package URL"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"purl"})," is a URL composed of seven components:"]}),"\n",(0,s.jsxs)(n.p,{children:["scheme",":type","/namespace/name@version?qualifiers#subpath"]}),"\n",(0,s.jsx)(n.p,{children:"Components are separated by a specific character for unambiguous\nparsing."}),"\n",(0,s.jsx)(n.p,{children:"The definition for each component is:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"scheme"}),": this is the URL scheme with the constant value of \u201cpkg\u201d.\nOne of the primary reason for this single scheme is to facilitate the\nfuture official registration of the \u201cpkg\u201d scheme for package URLs.\nRequired."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"type"}),": the package \u201ctype\u201d or package \u201cprotocol\u201d such as maven, npm,\nnuget, gem, pypi, etc. Required."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"namespace"}),": some name prefix such as a Maven groupid, a Docker\nimage owner, a GitHub user or organization. Optional and\ntype-specific."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"name"}),": the name of the package. Required."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"version"}),": the version of the package. Optional."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"qualifiers"}),": extra qualifying data for a package such as an OS,\narchitecture, a distro, etc. Optional and type-specific."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"subpath"}),": extra subpath within a package, relative to the package\nroot. Optional."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Table 1: Components of a PURL"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Component"}),(0,s.jsx)(n.th,{children:"Requirement"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"scheme"}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The URL scheme with the constant value of \u201cpkg\u201d. One of the primary reasons for this single scheme is to facilitate the future official registration of the \u201cpkg\u201d scheme for package URLs."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"type"}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The package \u201ctype\u201d or package \u201cprotocol\u201d such as maven, npm, nuget, gem, pypi, etc."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"namespace"}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"A name prefix such as a Maven groupid, a Docker image owner, a GitHub user or organization. Namespace is type-specific."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name"}),(0,s.jsx)(n.td,{children:"Required"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The name of the package."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"version"}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The version of the package."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"qualifiers"}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Qualifier data for a package such as OS, architecture, repository, etc. Qualifiers are type-specific."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"subpath"}),(0,s.jsx)(n.td,{children:"Optional"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Subpath within a package, relative to the package root."})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Components are designed such that they form a hierarchy from the most\nsignificant on the left to the least significant components on the\nright."}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"purl"})," must not contain a URL Authority, i.e.\xa0there is no support for\n",(0,s.jsx)(n.code,{children:"username"}),", ",(0,s.jsx)(n.code,{children:"password"}),", ",(0,s.jsx)(n.code,{children:"host"})," and ",(0,s.jsx)(n.code,{children:"port"})," components. A ",(0,s.jsx)(n.code,{children:"namespace"}),"\nsegment may sometimes look like a ",(0,s.jsx)(n.code,{children:"host"}),", but its interpretation is\nspecific to a ",(0,s.jsx)(n.code,{children:"type"}),"."]}),"\n",(0,s.jsxs)(n.h2,{id:"some-purl-examples",children:["Some ",(0,s.jsx)(n.code,{children:"purl"})," examples"]}),"\n",(0,s.jsxs)(n.p,{children:["pkg",":bitbucket","/birkenfeld/pygments-main@244fd47e07d1014f0aed9c\npkg",":deb","/debian/curl@7.50.3-1?arch=i386&distro=jessie\npkg",":gem","/ruby-advisory-db-check@0.12.4\npkg",":github","/package-url/purl-spec@244fd47e07d1004f0aed9c\npkg",":golang","/google.golang.org/genproto#googleapis/api/annotations\npkg",":maven","/org.apache.xmlgraphics/batik-anim@1.9.1?packaging=sources\npkg",":npm","/foobar@12.3.1\npkg",":nuget","/EnterpriseLibrary.Common@6.0.1304\npkg",":pypi","/django@1.11.1\npkg",":rpm","/fedora/curl@7.50.3-1.fc25?arch=i386&distro=fedora-25"]}),"\n",(0,s.jsxs)(n.h2,{id:"a-purl-is-a-url",children:["A ",(0,s.jsx)(n.code,{children:"purl"})," is a URL"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"purl"})," is a valid URL and URI that conforms to the URL definitions\nor specifications at:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc3986",children:"https://tools.ietf.org/html/rfc3986"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/URL#Syntax",children:"https://en.wikipedia.org/wiki/URL#Syntax"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Uniform_Resource_Identifier#Syntax",children:"https://en.wikipedia.org/wiki/Uniform_Resource_Identifier#Syntax"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://url.spec.whatwg.org/",children:"https://url.spec.whatwg.org/"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["This is a valid URL because it is a locator even though it has no\nAuthority URL component: each ",(0,s.jsx)(n.code,{children:"type"})," has a default repository location\nwhen defined."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"purl"})," components are mapped to these URL components:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"purl"})," ",(0,s.jsx)(n.code,{children:"scheme"}),": this is a URL ",(0,s.jsx)(n.code,{children:"scheme"})," with a constant value: ",(0,s.jsx)(n.code,{children:"pkg"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"purl"})," ",(0,s.jsx)(n.code,{children:"type"}),", ",(0,s.jsx)(n.code,{children:"namespace"}),", ",(0,s.jsx)(n.code,{children:"name"})," and ",(0,s.jsx)(n.code,{children:"version"})," components: these\nare collectively mapped to a URL ",(0,s.jsx)(n.code,{children:"path"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"purl"})," ",(0,s.jsx)(n.code,{children:"qualifiers"}),": this maps to a URL ",(0,s.jsx)(n.code,{children:"query"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"purl"})," ",(0,s.jsx)(n.code,{children:"subpath"}),": this is a URL ",(0,s.jsx)(n.code,{children:"fragment"})]}),"\n",(0,s.jsxs)(n.li,{children:["In a ",(0,s.jsx)(n.code,{children:"purl"}),", there is no support for a URL Authority (e.g.\xa0no\n",(0,s.jsx)(n.code,{children:"username"}),", ",(0,s.jsx)(n.code,{children:"password"}),", ",(0,s.jsx)(n.code,{children:"host"})," and ",(0,s.jsx)(n.code,{children:"port"})," components)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Special URL schemes as defined in ",(0,s.jsx)(n.a,{href:"https://url.spec.whatwg.org/",children:"https://url.spec.whatwg.org/"})," such as\n",(0,s.jsx)(n.code,{children:"file://"}),", ",(0,s.jsx)(n.code,{children:"https://"}),", ",(0,s.jsx)(n.code,{children:"http://"})," and ",(0,s.jsx)(n.code,{children:"ftp://"})," are not valid ",(0,s.jsx)(n.code,{children:"purl"}),"\ntypes. They are valid URL or URI schemes but they are not ",(0,s.jsx)(n.code,{children:"purl"}),". They\nmay be used to reference URLs in separate attributes outside of a\n",(0,s.jsx)(n.code,{children:"purl"})," or in a ",(0,s.jsx)(n.code,{children:"purl"})," qualifier."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Version control system (VCS) URLs such ",(0,s.jsx)(n.code,{children:"git://"}),", ",(0,s.jsx)(n.code,{children:"svn://"}),", ",(0,s.jsx)(n.code,{children:"hg://"})," or\nas defined in Python pip or SPDX download locations are not valid\n",(0,s.jsx)(n.code,{children:"purl"})," types. They are valid URL or URI schemes but they are not\n",(0,s.jsx)(n.code,{children:"purl"}),". They are a closely related, compact and uniform way to\nreference VCS URLs. They may be used as references in separate\nattributes outside of a ",(0,s.jsx)(n.code,{children:"purl"})," or in a ",(0,s.jsx)(n.code,{children:"purl"})," qualifier."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"51-permitted-characters",children:"5.1 Permitted Characters"}),"\n",(0,s.jsxs)(n.p,{children:["A canonical ",(0,s.jsx)(n.code,{children:"purl"})," is composed of these permitted ASCII characters:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["the Alphanumeric Characters: ",(0,s.jsx)(n.code,{children:"A to Z"}),", ",(0,s.jsx)(n.code,{children:"a to z"}),", ",(0,s.jsx)(n.code,{children:"0 to 9"}),","]}),"\n",(0,s.jsxs)(n.li,{children:["the Punctuation Characters: ",(0,s.jsx)(n.code,{children:".-_~"})," (period \u2018.\u2019, dash \u2018-\u2019, underscore\n\u2019_\u2019 and tilde \u2018~\u2019),"]}),"\n",(0,s.jsxs)(n.li,{children:["the Percent Character: ",(0,s.jsx)(n.code,{children:"%"})," (percent sign \u2018%\u2019), and"]}),"\n",(0,s.jsxs)(n.li,{children:["the Separator Characters ",(0,s.jsx)(n.code,{children:":/@?=&#"})," (colon \u2018:\u2019, slash \u2018/\u2019, at sign \u2018@\u2019,\nquestion mark \u2018?\u2019, equal sign \u2018=\u2019, ampersand \u2018&\u2019 and hash sign \u2018#\u2019)."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"52-separator-characters",children:"5.2 Separator Characters"}),"\n",(0,s.jsx)(n.p,{children:"This is how each of the Separator Characters is used:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2018:\u2019 (colon) is the separator between ",(0,s.jsx)(n.code,{children:"scheme"})," and ",(0,s.jsx)(n.code,{children:"type"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u2018/\u2019 (slash) is the separator between ",(0,s.jsx)(n.code,{children:"type"}),", ",(0,s.jsx)(n.code,{children:"namespace"})," and ",(0,s.jsx)(n.code,{children:"name"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u2018/\u2019 (slash) is the separator between ",(0,s.jsx)(n.code,{children:"subpath"})," segments"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2018@\u2019 (at sign) is the separator between ",(0,s.jsx)(n.code,{children:"name"})," and ",(0,s.jsx)(n.code,{children:"version"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u2018?\u2019 (question mark) is the separator before ",(0,s.jsx)(n.code,{children:"qualifiers"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u2018=\u2019 (equals) is the separator between a ",(0,s.jsx)(n.code,{children:"key"})," and a ",(0,s.jsx)(n.code,{children:"value"})," of a\n",(0,s.jsx)(n.code,{children:"qualifier"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u2018&\u2019 (ampersand) is the separator between ",(0,s.jsx)(n.code,{children:"qualifiers"})," (each being a\n",(0,s.jsx)(n.code,{children:"key=value"})," pair)"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2018#\u2019 (number sign) is the separator before ",(0,s.jsx)(n.code,{children:"subpath"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"53-character-encoding",children:"5.3 Character Encoding"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In the \u201cRules for each ",(0,s.jsx)(n.code,{children:"purl"})," component\u201d section, each component\ndefines when and how to apply percent-encoding and decoding to its\ncontent."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"When percent-encoding is required by a component definition, the\ncomponent string must first be encoded as UTF-8."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In the component string, each \u201cdata octet\u201d must be replaced by the\npercent-encoded \u201ccharacter triplet\u201d applying the percent-encoding\nmechanism defined in ",(0,s.jsx)(n.a,{href:"https://datatracker.ietf.org/doc/html/rfc3986#section-2.1",children:"RFC 3986 section\n2.1"}),",\nincluding the RFC definition of \u201cdata octet\u201d and \u201ccharacter triplet\u201d,\nand using these definitions for RFC\u2019s \u201callowed set\u201d and \u201cdelimiters\u201d:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u201callowed set\u201d is composed of the Alphanumeric Characters and the\nPunctuation Characters"}),"\n",(0,s.jsx)(n.li,{children:"\u201cdelimiters\u201d is composed of the Separator Characters"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"The following characters must not be percent-encoded:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"the Alphanumeric Characters,"}),"\n",(0,s.jsx)(n.li,{children:"the Punctuation Characters,"}),"\n",(0,s.jsxs)(n.li,{children:["the Separator Characters when being used as ",(0,s.jsx)(n.code,{children:"purl"})," separators,"]}),"\n",(0,s.jsx)(n.li,{children:"the colon \u2018:\u2019, whether used as a Separator Character or otherwise,\nand"}),"\n",(0,s.jsx)(n.li,{children:"the percent sign \u2018%\u2019 when used to represent a percent-encoded\ncharacter."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Where the space \u2019 \u2019 is permitted, it must be percent-encoded as \u2018%20\u2019."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"With the exception of the percent-encoding mechanism, the rules\nregarding percent-encoding are defined by this specification alone."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"54-case-folding",children:"5.4 Case Folding"}),"\n",(0,s.jsxs)(n.p,{children:["References to \u201clowercase\u201d in this specification refer to the\n",(0,s.jsx)(n.strong,{children:"culture-invariant"})," full case mapping defined in ",(0,s.jsx)(n.a,{href:"https://www.unicode.org/versions/Unicode16.0.0/core-spec/chapter-3/#G34078",children:"Section 3.13.2 of\nthe Unicode\nStandard"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["When applied to the ASCII character set, this operation converts\nuppercase Latin letters (",(0,s.jsx)(n.code,{children:"A to Z"}),") to their corresponding lowercase\nforms (",(0,s.jsx)(n.code,{children:"a to z"}),"). All other ASCII characters remain unchanged."]}),"\n",(0,s.jsx)(n.h2,{id:"55-component-level-rules",children:"5.5 Component-level Rules"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"purl"})," string is an ASCII URL string composed of seven components."]}),"\n",(0,s.jsx)(n.p,{children:"Except as expressly stated otherwise in this section, each component:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"May be composed of any of the characters defined in the \u201cPermitted\ncharacters\u201d section"}),"\n",(0,s.jsx)(n.li,{children:"Must be encoded as defined in the \u201cCharacter encoding\u201d section"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The \u201clowercase\u201d rules are defined in the \u201cCase folding\u201d section."}),"\n",(0,s.jsx)(n.p,{children:"The rules for each component are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"scheme"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"scheme"})," is a constant with the value \u201cpkg\u201d."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"scheme"})," must be followed by an unencoded colon \u2018:\u2019."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"purl"})," parsers must accept URLs where the ",(0,s.jsx)(n.code,{children:"scheme"})," and colon \u2018:\u2019 are\nfollowed by one or more slash \u2018/\u2019 characters, such as \u2018pkg://\u2019, and\nmust ignore and remove all such \u2018/\u2019 characters."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"type"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The package ",(0,s.jsx)(n.code,{children:"type"})," must be composed only of ASCII letters and\nnumbers, period \u2018.\u2019, and dash \u2018-\u2019."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"type"})," must start with an ASCII letter."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"type"})," must not be percent-encoded."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"type"})," is case insensitive. The canonical form is lowercase."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"namespace"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"namespace"})," is optional, unless required by the package\u2019s ",(0,s.jsx)(n.code,{children:"type"}),"\ndefinition."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["If present, the ",(0,s.jsx)(n.code,{children:"namespace"})," may contain one or more segments,\nseparated by a single unencoded slash \u2018/\u2019 character."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["All leading and trailing slashes \u2018/\u2019 are not significant and should\nbe stripped in the canonical form. They are not part of the\n",(0,s.jsx)(n.code,{children:"namespace"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Each ",(0,s.jsx)(n.code,{children:"namespace"})," segment must be a percent-encoded string."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"When percent-decoded, a segment:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Must not contain any slash \u2018/\u2019 characters"}),"\n",(0,s.jsx)(n.li,{children:"Must not be empty"}),"\n",(0,s.jsxs)(n.li,{children:["Must contain any Unicode character other than \u2018/\u2019 unless the\npackage\u2019s ",(0,s.jsx)(n.code,{children:"type"})," definition provides otherwise."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["A URL host or Authority must not be used as a ",(0,s.jsx)(n.code,{children:"namespace"}),". Use\ninstead a ",(0,s.jsx)(n.code,{children:"repository_url"})," qualifier. Note however, that for some\ntypes, the ",(0,s.jsx)(n.code,{children:"namespace"})," may look like a host."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"name"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"name"})," is prefixed by a single slash \u2018/\u2019 separator when the\n",(0,s.jsx)(n.code,{children:"namespace"})," is not empty."]}),"\n",(0,s.jsxs)(n.li,{children:["All leading and trailing slashes \u2018/\u2019 are not significant and should\nbe stripped in the canonical form. They are not part of the ",(0,s.jsx)(n.code,{children:"name"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.code,{children:"name"})," must be a percent-encoded string."]}),"\n",(0,s.jsxs)(n.li,{children:["When percent-decoded, a ",(0,s.jsx)(n.code,{children:"name"})," may contain any Unicode character\nunless the package\u2019s ",(0,s.jsx)(n.code,{children:"type"})," definition provides otherwise."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"version"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"version"})," is prefixed by a \u2018@\u2019 separator when not empty."]}),"\n",(0,s.jsxs)(n.li,{children:["This \u2018@\u2019 is not part of the ",(0,s.jsx)(n.code,{children:"version"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.code,{children:"version"})," must be a percent-encoded string."]}),"\n",(0,s.jsxs)(n.li,{children:["When percent-decoded, a ",(0,s.jsx)(n.code,{children:"version"})," may contain any Unicode character\nunless the package\u2019s ",(0,s.jsx)(n.code,{children:"type"})," definition provides otherwise."]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.code,{children:"version"})," is a plain and opaque string."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"qualifiers"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"qualifiers"})," component must be prefixed by an unencoded question\nmark \u2018?\u2019 separator when not empty. This \u2018?\u2019 separator is not part of\nthe ",(0,s.jsx)(n.code,{children:"qualifiers"})," component."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"qualifiers"})," component is composed of one or more ",(0,s.jsx)(n.code,{children:"key=value"}),"\npairs. Multiple ",(0,s.jsx)(n.code,{children:"key=value"})," pairs must be separated by an unencoded\nampersand \u2018&\u2019. This \u2018&\u2019 separator is not part of an individual\n",(0,s.jsx)(n.code,{children:"qualifier"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"key"})," and ",(0,s.jsx)(n.code,{children:"value"})," must be separated by the unencoded equal sign\n\u2018=\u2019 character. This \u2018=\u2019 separator is not part of the ",(0,s.jsx)(n.code,{children:"key"})," or\n",(0,s.jsx)(n.code,{children:"value"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"value"})," must not be an empty string: a ",(0,s.jsx)(n.code,{children:"key=value"})," pair with an\nempty ",(0,s.jsx)(n.code,{children:"value"})," is the same as if no ",(0,s.jsx)(n.code,{children:"key=value"})," pair exists for this\n",(0,s.jsx)(n.code,{children:"key"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["For each ",(0,s.jsx)(n.code,{children:"key=value"})," pair:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"key"})," must be composed only of lowercase ASCII letters and\nnumbers, period \u2018.\u2019, dash \u2018-\u2019 and underscore \u2019_\u2019."]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.code,{children:"key"})," must start with an ASCII letter."]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.code,{children:"key"})," must not be percent-encoded."]}),"\n",(0,s.jsxs)(n.li,{children:["Each ",(0,s.jsx)(n.code,{children:"key"})," must be unique among all the keys of the ",(0,s.jsx)(n.code,{children:"qualifiers"}),"\ncomponent."]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.code,{children:"value"})," may contain any Unicode character and all characters\nmust be encoded as described in the \u201cCharacter encoding\u201d section."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"subpath"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"subpath"})," string is prefixed by a \u2018#\u2019 separator when not empty"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["This \u2018#\u2019 is not part of the ",(0,s.jsx)(n.code,{children:"subpath"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"subpath"})," contains zero or more segments, separated by slash \u2018/\u2019"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Leading and trailing slashes \u2018/\u2019 are not significant and should be\nstripped in the canonical form"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Each ",(0,s.jsx)(n.code,{children:"subpath"})," segment must be a percent-encoded string"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"When percent-decoded, a segment:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Must not contain any slash \u2018/\u2019 characters"}),"\n",(0,s.jsx)(n.li,{children:"Must not be empty"}),"\n",(0,s.jsx)(n.li,{children:"Must not be any of \u2018..\u2019 or \u2018.\u2019"}),"\n",(0,s.jsxs)(n.li,{children:["May contain any Unicode character other than \u2018/\u2019 unless the\npackage\u2019s ",(0,s.jsx)(n.code,{children:"type"})," definition provides otherwise."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"subpath"})," must be interpreted as relative to the root of the\npackage"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"56-purl-types",children:"5.6 PURL Types"}),"\n",(0,s.jsx)(n.p,{children:"Each package manager, platform, type, or ecosystem has its own\nconventions and protocols to identify, locate, and provision software\npackages."}),"\n",(0,s.jsxs)(n.p,{children:["The package ",(0,s.jsx)(n.strong,{children:"type"})," is the component of a Package-URL that is used to\ncapture this information with a short string such as ",(0,s.jsx)(n.code,{children:"maven"}),", ",(0,s.jsx)(n.code,{children:"npm"}),",\n",(0,s.jsx)(n.code,{children:"nuget"}),", ",(0,s.jsx)(n.code,{children:"gem"}),", ",(0,s.jsx)(n.code,{children:"pypi"}),", etc."]}),"\n",(0,s.jsxs)(n.p,{children:["These are registered ",(0,s.jsx)(n.code,{children:"PURL"})," package type definitions."]}),"\n",(0,s.jsx)(n.p,{children:"Definitions can also include types reserved for future use."}),"\n",(0,s.jsx)(n.p,{children:"This document no longer contains a manually maintained list of PURL\ntypes."}),"\n",(0,s.jsx)(n.p,{children:"Instead, all PURL type definitions are now maintained in a simple JSON\ndocument with automatically generated documentation."}),"\n",(0,s.jsx)(n.h2,{id:"where-to-find-purl-type-information",children:"Where to find PURL Type information"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In the JSON Index listing of all defined PURL types at:\n",(0,s.jsx)(n.code,{children:"/purl-types-index.json <https://github.com/package-url/purl-spec/tree/main/purl-types-index.json>"}),"_"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In individual JSON files, one for each PURL type definition at:\n",(0,s.jsx)(n.code,{children:"/types <https://github.com/package-url/purl-spec/tree/main/types>"}),"_"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["As Markdown documentation, generated from for each PURL type JSON\ndefinition at:\n",(0,s.jsx)(n.code,{children:"/types-doc <https://github.com/package-url/purl-spec/tree/main/types-doc>"}),"_"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"a-schemas",children:"A Schemas"}),"\n",(0,s.jsxs)(n.p,{children:["This annex provides copies of the current Package-URL schemas. The\nformat is JSON Schema version draft-07\n(",(0,s.jsx)(n.a,{href:"https://json-schema.org/draft-07",children:"https://json-schema.org/draft-07"}),")"]}),"\n",(0,s.jsx)(n.h2,{id:"a1-purl-type-definition",children:"A.1 PURL Type Definition"}),"\n",(0,s.jsxs)(n.p,{children:["The schema shown below is available in electronic form at:\n",(0,s.jsx)(n.a,{href:"https://github.com/package-url/purl-spec/blob/main/schemas/purl-type-definition.schema.json",children:"https://github.com/package-url/purl-spec/blob/main/schemas/purl-type-definition.schema.json"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'  1 | {\n  2 |   "$schema": "http://json-schema.org/draft-07/schema#",\n  3 |   "$id": "https://packageurl.org/schemas/purl-type-definition.schema-1.0.json",\n  4 |   "title": "Package-URL Type Definition",\n  5 |   "description": "Schema to specify a Package-URL (PURL) type as a structured definition.",\n  6 |   "type": "object",\n  7 |   "additionalProperties": false,\n  8 |   "definitions": {\n  9 |     "requirement": {\n 10 |       "title": "Component requirement",\n 11 |       "description": "States if this PURL component is required, optional, or prohibited.",\n 12 |       "type": "string",\n 13 |       "enum": [\n 14 |         "required",\n 15 |         "optional",\n 16 |         "prohibited"\n 17 |       ],\n 18 |       "meta:enum": {\n 19 |         "required": "This PURL component is required for this PURL type.",\n 20 |         "optional": "This PURL component is optional for this PURL type.",\n 21 |         "prohibited": "This PURL component is prohibited: it must not be present for this PURL type."\n 22 |       }\n 23 |     },\n 24 |     "purl_component_definition": {\n 25 |       "title": "PURL component definition",\n 26 |       "description": "PURL component definition properties that apply to most PURL components",\n 27 |       "type": "object",\n 28 |       "properties": {\n 29 |         "permitted_characters": {\n 30 |           "title": "Permitted characters in this PURL component",\n 31 |           "description": "Regular expression (ECMA-262 dialect) defining the \'Permitted characters\' for this component of this Package-URL type. If provided, this must be a subset of the \'Permitted characters\' defined in the PURL specification.",\n 32 |           "type": "string",\n 33 |           "format": "regex"\n 34 |         },\n 35 |         "case_sensitive": {\n 36 |           "title": "Case sensitive",\n 37 |           "description": "true if this PURL component is case sensitive. If false, the canonical form must be lowercased.",\n 38 |           "type": "boolean",\n 39 |           "default": true\n 40 |         },\n 41 |         "normalization_rules": {\n 42 |           "title": "Normalization rules",\n 43 |           "description": "List of rules to normalize this component for this PURL type. These are plain text, unstructured rules as some require programming and cannot be enforced only with a schema. Tools are expected to apply these rules programmatically.",\n 44 |           "type": "array",\n 45 |           "uniqueItems": true,\n 46 |           "items": {\n 47 |             "type": "string"\n 48 |           }\n 49 |         },\n 50 |         "native_name": {\n 51 |           "title": "Native name",\n 52 |           "description": "The native name of this PURL component in the package ecosystem. For instance, the \'namespace\' for the \'maven\' type is \'groupId\', and \'scope\' for the \'npm\' PURL type.",\n 53 |           "type": "string"\n 54 |         },\n 55 |         "note": {\n 56 |           "title": "Note",\n 57 |           "description": "Extra note text.",\n 58 |           "type": "string"\n 59 |         }\n 60 |       }\n 61 |     }\n 62 |   },\n 63 |   "required": [\n 64 |     "$id",\n 65 |     "type",\n 66 |     "type_name",\n 67 |     "description",\n 68 |     "repository",\n 69 |     "namespace_definition",\n 70 |     "name_definition",\n 71 |     "examples"\n 72 |   ],\n 73 |   "properties": {\n 74 |     "$schema": {\n 75 |       "title": "JSON schema",\n 76 |       "description": "Contains the URL of the JSON schema for Package-URL type definition.",\n 77 |       "constant": "https://packageurl.org/schemas/purl-type.schema-1.0.json",\n 78 |       "format": "uri"\n 79 |     },\n 80 |     "$id": {\n 81 |       "title": "PURL type definition id",\n 82 |       "description": "The unique identifier URI for this PURL type definition.",\n 83 |       "type": "string",\n 84 |       "pattern": "^https:\\\\/\\\\/packageurl\\\\.org/types/[a-z0-9-]+-definition\\\\.json$"\n 85 |     },\n 86 |     "type": {\n 87 |       "title": "PURL type",\n 88 |       "description": "The type string for this Package-URL type.",\n 89 |       "type": "string",\n 90 |       "pattern": "^[a-z][a-z0-9-\\\\.]+$",\n 91 |       "examples": [\n 92 |         "maven",\n 93 |         "npm",\n 94 |         "pypi"\n 95 |       ]\n 96 |     },\n 97 |     "type_name": {\n 98 |       "title": "Type name",\n 99 |       "description": "The name for this PURL type.",\n100 |       "type": "string",\n101 |       "examples": [\n102 |         "Apache Maven",\n103 |         "Python Package"\n104 |       ]\n105 |     },\n106 |     "description": {\n107 |       "title": "Description",\n108 |       "description": "The description of this PURL type.",\n109 |       "type": "string"\n110 |     },\n111 |     "repository": {\n112 |       "title": "Repository",\n113 |       "description": "Package repository usage for this PURL type.",\n114 |       "type": "object",\n115 |       "additionalProperties": false,\n116 |       "required": [\n117 |         "use_repository"\n118 |       ],\n119 |       "properties": {\n120 |         "use_repository": {\n121 |           "title": "Use repository",\n122 |           "description": "true if this PURL type use a public package repository.",\n123 |           "type": "boolean",\n124 |           "default": false\n125 |         },\n126 |         "default_repository_url": {\n127 |           "title": "Default repository URL",\n128 |           "description": "The default public repository URL for this PURL type",\n129 |           "type": "string",\n130 |           "format": "uri"\n131 |         },\n132 |         "note": {\n133 |           "title": "Note",\n134 |           "description": "Extra note text.",\n135 |           "type": "string"\n136 |         }\n137 |       }\n138 |     },\n139 |     "namespace_definition": {\n140 |       "title": "Namespace definition",\n141 |       "description": "Definition of the namespace component for this PURL type.",\n142 |       "type": "object",\n143 |       "required": [\n144 |         "requirement"\n145 |       ],\n146 |       "properties": {\n147 |         "requirement": {\n148 |           "$ref": "#/definitions/requirement"\n149 |         }\n150 |       },\n151 |       "allOf": [\n152 |         {\n153 |           "$ref": "#/definitions/purl_component_definition"\n154 |         }\n155 |       ]\n156 |     },\n157 |     "name_definition": {\n158 |       "title": "Name definition",\n159 |       "description": "Definition of the name component for this PURL type.",\n160 |       "type": "object",\n161 |       "allOf": [\n162 |         {\n163 |           "$ref": "#/definitions/purl_component_definition"\n164 |         }\n165 |       ]\n166 |     },\n167 |     "version_definition": {\n168 |       "title": "Version definition",\n169 |       "description": "Definition of the version component for this PURL type.",\n170 |       "type": "object",\n171 |       "allOf": [\n172 |         {\n173 |           "$ref": "#/definitions/purl_component_definition"\n174 |         }\n175 |       ]\n176 |     },\n177 |     "qualifiers_definition": {\n178 |       "title": "Qualifiers definition",\n179 |       "description": "Definition for the qualifiers specific to this PURL type.",\n180 |       "type": "array",\n181 |       "additionalItems": false,\n182 |       "uniqueItems": true,\n183 |       "items": {\n184 |         "title": "Qualifiers definition",\n185 |         "description": "Definition of a qualifier specific to this PURL type.",\n186 |         "type": "object",\n187 |         "additionalProperties": false,\n188 |         "required": [\n189 |           "key",\n190 |           "description"\n191 |         ],\n192 |         "properties": {\n193 |           "key": {\n194 |             "title": "Qualifier key",\n195 |             "description": "The key for the qualifier.",\n196 |             "type": "string"\n197 |           },\n198 |           "requirement": {\n199 |             "$ref": "#/definitions/requirement"\n200 |           },\n201 |           "description": {\n202 |             "title": "Description",\n203 |             "description": "The description of this qualifier.",\n204 |             "type": "string"\n205 |           },\n206 |           "default_value": {\n207 |             "title": "Default value",\n208 |             "description": "The optional default value of this qualifier if not provided.",\n209 |             "type": "string"\n210 |           },\n211 |           "native_name": {\n212 |             "title": "Native name",\n213 |             "description": "The equivalent native name for this qualifier key.",\n214 |             "type": "string"\n215 |           }\n216 |         }\n217 |       }\n218 |     },\n219 |     "subpath_definition": {\n220 |       "title": "Subpath definition",\n221 |       "description": "Definition for the subpath for this PURL type.",\n222 |       "type": "object",\n223 |       "allOf": [\n224 |         {\n225 |           "$ref": "#/definitions/purl_component_definition"\n226 |         }\n227 |       ]\n228 |     },\n229 |     "examples": {\n230 |       "title": "PURL examples",\n231 |       "description": "Example of valid, canonical PURLs for this package type.",\n232 |       "type": "array",\n233 |       "uniqueItems": true,\n234 |       "minItems": 1,\n235 |       "items": {\n236 |         "type": "string",\n237 |         "pattern": "^pkg:[a-z][a-z0-9-\\\\.]+/.*$"\n238 |       }\n239 |     },\n240 |     "note": {\n241 |       "title": "Note",\n242 |       "description": "Note about this PURL type.",\n243 |       "type": "string"\n244 |     },\n245 |     "reference_urls": {\n246 |       "title": "Reference URLs",\n247 |       "description": "Optional list of informational reference URLs about this PURL type.",\n248 |       "type": "array",\n249 |       "uniqueItems": true,\n250 |       "items": {\n251 |         "type": "string",\n252 |         "format": "uri"\n253 |       }\n254 |     }\n255 |   }\n256 | }\n'})}),"\n",(0,s.jsx)(n.h2,{id:"a2-purl-types-index",children:"A.2 PURL Types Index"}),"\n",(0,s.jsxs)(n.p,{children:["The schema shown below is available in electronic form at:\n",(0,s.jsx)(n.a,{href:"https://github.com/package-url/purl-spec/blob/main/schemas/purl-types-index.schema.json",children:"https://github.com/package-url/purl-spec/blob/main/schemas/purl-types-index.schema.json"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:' 1 | {\n 2 |   "$schema": "http://json-schema.org/draft-07/schema#",\n 3 |   "$id": "https://purl-spec.org/schemas/purl-type-index.schema-1.0.json",\n 4 |   "title": "Package-URL types list.",\n 5 |   "description": "A list of the registered Package-URL types.",\n 6 |   "type": "array",\n 7 |   "additionalItems": false,\n 8 |   "items": {\n 9 |     "type": "string"\n10 |   }\n11 | }\n'})}),"\n",(0,s.jsx)(n.h2,{id:"a3-purl-tests",children:"A.3 PURL Tests"}),"\n",(0,s.jsxs)(n.p,{children:["The schema shown below is available in electronic form at:\n",(0,s.jsx)(n.a,{href:"https://github.com/package-url/purl-spec/blob/main/schemas/purl-test.schema.json",children:"https://github.com/package-url/purl-spec/blob/main/schemas/purl-test.schema.json"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'  1 | {\n  2 |   "$schema": "http://json-schema.org/draft-07/schema#",\n  3 |   "$id": "https://packageurl.org/schemas/purl-test.schema-1.0.json",\n  4 |   "title": "PURL test definition",\n  5 |   "description": "Schema for Package-URL building and parsing tests with input and expected output.",\n  6 |   "type": "object",\n  7 |   "additionalProperties": false,\n  8 |   "definitions": {\n  9 |     "purl_components": {\n 10 |       "title": "PURL decoded components",\n 11 |       "description": "Individual decoded PURL components to use as a test input or expected output.",\n 12 |       "type": "object",\n 13 |       "additionalProperties": false,\n 14 |       "properties": {\n 15 |         "type": {\n 16 |           "title": "PURL type",\n 17 |           "description": "Package-URL type component.",\n 18 |           "default": null,\n 19 |           "type": [\n 20 |             "string",\n 21 |             "null"\n 22 |           ]\n 23 |         },\n 24 |         "namespace": {\n 25 |           "title": "PURL namespace",\n 26 |           "description": "Package-URL namespace decoded component.",\n 27 |           "default": null,\n 28 |           "type": [\n 29 |             "string",\n 30 |             "null"\n 31 |           ]\n 32 |         },\n 33 |         "name": {\n 34 |           "title": "PURL name",\n 35 |           "description": "Package-URL name decoded component.",\n 36 |           "default": null,\n 37 |           "type": [\n 38 |             "string",\n 39 |             "null"\n 40 |           ]\n 41 |         },\n 42 |         "version": {\n 43 |           "title": "PURL version",\n 44 |           "description": "Package-URL version decoded component.",\n 45 |           "default": null,\n 46 |           "type": [\n 47 |             "string",\n 48 |             "null"\n 49 |           ]\n 50 |         },\n 51 |         "qualifiers": {\n 52 |           "title": "PURL qualifiers",\n 53 |           "description": "Package-URL qualifiers decoded component as an object.",\n 54 |           "default": null,\n 55 |           "type": [\n 56 |             "object",\n 57 |             "null"\n 58 |           ]\n 59 |         },\n 60 |         "subpath": {\n 61 |           "title": "PURL subpath",\n 62 |           "description": "Package-URL subpath decoded component.",\n 63 |           "default": null,\n 64 |           "type": [\n 65 |             "string",\n 66 |             "null"\n 67 |           ]\n 68 |         }\n 69 |       }\n 70 |     },\n 71 |     "purl_test": {\n 72 |       "title": "PURL test",\n 73 |       "description": "A PURL test with input and expected output.",\n 74 |       "type": "object",\n 75 |       "required": [\n 76 |         "description",\n 77 |         "test_group",\n 78 |         "test_type",\n 79 |         "input"\n 80 |       ],\n 81 |       "properties": {\n 82 |         "description": {\n 83 |           "title": "Test description",\n 84 |           "description": "A description for this test.",\n 85 |           "type": "string"\n 86 |         },\n 87 |         "test_group": {\n 88 |           "title": "Test group",\n 89 |           "description": "The group of this test like \'base\' or \'advanced\'.",\n 90 |           "type": "string",\n 91 |           "enum": [\n 92 |             "base",\n 93 |             "advanced"\n 94 |           ],\n 95 |           "meta:enum": {\n 96 |             "base": "Test group for base conformance tests for PURL building and parsing.",\n 97 |             "advanced": "Test group for advanced tests to support flexible PURL building and parsing."\n 98 |           }\n 99 |         },\n100 |         "test_type": {\n101 |           "title": "Test type",\n102 |           "description": "The type of this test like \'build\' or \'parse\'.",\n103 |           "type": "string",\n104 |           "enum": [\n105 |             "build",\n106 |             "parse",\n107 |             "roundtrip"\n108 |           ],\n109 |           "meta:enum": {\n110 |             "build": "A PURL building test from decoded components to a canonical PURL string.",\n111 |             "parse": "A PURL building test from decoded components to a canonical PURL string.",\n112 |             "roundtrip": "A PURL routrip test, parsing then building back a PURL from a canonical string input."\n113 |           }\n114 |         },\n115 |         "expected_failure": {\n116 |           "title": "Expected failure",\n117 |           "description": "true if this test input is expected to fail to be processed.",\n118 |           "type": "boolean",\n119 |           "default": false\n120 |         },\n121 |         "expected_failure_reason": {\n122 |           "title": "Expected failure reason",\n123 |           "description": "The reason why this test is is expected to fail if expected_failure is true.",\n124 |           "default": null,\n125 |           "type": [\n126 |             "string",\n127 |             "null"\n128 |           ]\n129 |         }\n130 |       },\n131 |       "allOf": [\n132 |         {\n133 |           "if": {\n134 |             "properties": {\n135 |               "test_type": {\n136 |                 "const": "parse"\n137 |               },\n138 |               "expected_failure": {\n139 |                 "const": false\n140 |               }\n141 |             },\n142 |             "required": [\n143 |               "test_type",\n144 |               "expected_failure"\n145 |             ]\n146 |           },\n147 |           "then": {\n148 |             "properties": {\n149 |               "input": {\n150 |                 "title": "Input test PURL",\n151 |                 "description": "A PURL string to use as a test input (canonical or not).",\n152 |                 "type": "string"\n153 |               },\n154 |               "expected_output": {\n155 |                 "title": "Expected output decoded PURL components",\n156 |                 "description": "Test output as an object decoded PURL components, unless expected_failure.",\n157 |                 "$ref": "#/definitions/purl_components"\n158 |               }\n159 |             },\n160 |             "required": [\n161 |               "input",\n162 |               "expected_output"\n163 |             ]\n164 |           }\n165 |         },\n166 |         {\n167 |           "if": {\n168 |             "properties": {\n169 |               "test_type": {\n170 |                 "const": "build"\n171 |               },\n172 |               "expected_failure": {\n173 |                 "const": false\n174 |               }\n175 |             },\n176 |             "required": [\n177 |               "test_type",\n178 |               "expected_failure"\n179 |             ]\n180 |           },\n181 |           "then": {\n182 |             "properties": {\n183 |               "input": {\n184 |                 "title": "Expected output decoded PURL components",\n185 |                 "description": "Test output as an object decoded PURL components, unless expected_failure.",\n186 |                 "$ref": "#/definitions/purl_components"\n187 |               },\n188 |               "expected_output": {\n189 |                 "title": "Expected canonical PURL",\n190 |                 "description": "A canonical PURL string to use as a test ouput.",\n191 |                 "type": "string"\n192 |               }\n193 |             },\n194 |             "required": [\n195 |               "input",\n196 |               "expected_output"\n197 |             ]\n198 |           }\n199 |         },\n200 |         {\n201 |           "if": {\n202 |             "properties": {\n203 |               "test_type": {\n204 |                 "const": "roundtrip"\n205 |               }\n206 |             },\n207 |             "required": [\n208 |               "test_type"\n209 |             ]\n210 |           },\n211 |           "then": {\n212 |             "properties": {\n213 |               "input": {\n214 |                 "title": "Input test PURL",\n215 |                 "description": "A PURL string to use as a test input (canonical or not).",\n216 |                 "type": "string"\n217 |               },\n218 |               "expected_output": {\n219 |                 "title": "Expected canonical PURL",\n220 |                 "description": "A canonical PURL string to use as a test ouput.",\n221 |                 "type": "string"\n222 |               }\n223 |             },\n224 |             "required": [\n225 |               "input",\n226 |               "expected_output"\n227 |             ]\n228 |           }\n229 |         },\n230 |         {\n231 |           "if": {\n232 |             "properties": {\n233 |               "test_type": {\n234 |                 "const": "parse"\n235 |               },\n236 |               "expected_failure": {\n237 |                 "const": true\n238 |               }\n239 |             },\n240 |             "required": [\n241 |               "test_type",\n242 |               "expected_failure"\n243 |             ]\n244 |           },\n245 |           "then": {\n246 |             "properties": {\n247 |               "input": {\n248 |                 "title": "Input test PURL",\n249 |                 "description": "A PURL string to use as a test input (canonical or not).",\n250 |                 "type": "string"\n251 |               }\n252 |             },\n253 |             "required": [\n254 |               "input",\n255 |               "expected_failure_reason"\n256 |             ]\n257 |           }\n258 |         },\n259 |         {\n260 |           "if": {\n261 |             "properties": {\n262 |               "test_type": {\n263 |                 "const": "build"\n264 |               },\n265 |               "expected_failure": {\n266 |                 "const": true\n267 |               }\n268 |             },\n269 |             "required": [\n270 |               "test_type",\n271 |               "expected_failure"\n272 |             ]\n273 |           },\n274 |           "then": {\n275 |             "properties": {\n276 |               "input": {\n277 |                 "title": "Expected output decoded PURL components",\n278 |                 "description": "Test output as an object decoded PURL components, unless expected_failure.",\n279 |                 "$ref": "#/definitions/purl_components"\n280 |               }\n281 |             },\n282 |             "required": [\n283 |               "input",\n284 |               "expected_failure_reason"\n285 |             ]\n286 |           }\n287 |         }\n288 |       ]\n289 |     }\n290 |   },\n291 |   "properties": {\n292 |     "$schema": {\n293 |       "title": "JSON schema",\n294 |       "description": "Contains the URL of the JSON schema for Package-URL tests.",\n295 |       "constant": "https://packageurl.org/schemas/purl-test.schema-1.0.json",\n296 |       "format": "uri"\n297 |     },\n298 |     "tests": {\n299 |       "title": "Test suite",\n300 |       "description": "A list of Package-URL build and parse tests.",\n301 |       "additionalItems": false,\n302 |       "type": "array",\n303 |       "minItems": 1,\n304 |       "uniqueItems": true,\n305 |       "items": {\n306 |         "$ref": "#/definitions/purl_test"\n307 |       }\n308 |     }\n309 |   }\n310 | }\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);